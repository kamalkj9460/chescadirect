{% comment %}

  This is your /cart template. If you are using the Ajaxify Cart plugin,
  your form (with action="/cart") layout will be used in the drawer/modal.

  For info on test orders:
    - General http://docs.shopify.com/manual/your-store/orders/test-orders
    - Shopify Payments - http://docs.shopify.com/manual/more/shopify-payments/testing-shopify-payments
{% layout 'theme.cart' %}
{% endcomment %}
{% layout 'theme.cart' %}

<header class="page-header">
  <h1>My Cart</h1>
</header>

{% if cart.item_count > 0 %}
 <form action="/cart" method="post" novalidate>
<div class="wrapper-cart">
	<h2 class="cart-title">Product</h2>
	<ul class="cart-list">
	
		 {% comment %}
      Loop through products in the cart
    {% endcomment %}
    {% for item in cart.items %}
		<li>
			<a class="product-img" href="{{ item.url | within: collections.all }}">

                {% comment %}
                  More image size options at:
                    - http://docs.shopify.com/themes/filters/product-img-url
                {% endcomment %}
				{% comment %}
                <img src="{{ item.product.featured_image.src | product_img_url: 'large' }}" alt="{{ item.title | escape }}">
				{% endcomment %}
				<img src="{{ item | img_url: 'large' }}"  alt="{{ item.title | escape }}" />
             </a>

			
        {% comment %}
          Let's use a sub grids to keep our product image and title together,
          and our quantity, price and remove buttons together
        {% endcomment %}
		          {% comment %}
              If you want the product title and any variants in one line, use {{ item.title }}.
              Below they've been separated for styling purposes.
            {% endcomment %}
			<div class="product-des">


				<h2 class="h4">
                <a href="{{ item.url }}">
                  {{ item.product.title }}

                
                </a>
				<div class="option">  {% if item.product.variants.size != 0 %}
                    {% unless item.variant.title contains 'Default' %}

                       <small>{{ item.variant.title }}</small>
                    {% endunless %}
                  {% endif %}</div>
              </h2>

              {% comment %}
                Optional, add the vendor
              {% endcomment %}
             <div class="vendor"> Vendor: <em>{{ item.vendor }}</em></div>

              {% comment %}
                Optional, loop through custom product line items if available

                For more info on line item properties, visit:
                  - http://docs.shopify.com/support/your-store/products/how-do-I-collect-additional-information-on-the-product-page-Like-for-a-monogram-engraving-or-customization
              {% endcomment %}
              {% if item.properties.size > 0 %}
              <p>
                {% for p in item.properties %}
                  {% unless p.last == blank %}
                    {{ p.first }}:

                    {% comment %}
                      Check if there was an uploaded file associated
                    {% endcomment %}
                    {% if p.last contains '/uploads/' %}
                      <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
                    {% else %}
                      {{ p.last }}
                    {% endif %}

                    <br>
                  {% endunless %}
                {% endfor %}
              </p>
              {% endif %}
			  
			  {% comment %}
				{{ item.price | money }}
				{% endcomment %}

			
			{{ item.line_price | money }}

			

				{% comment %}
				Added data-id for the ajax cart implementation only.
				{% endcomment %}
             <div class="quantity"><label>Quantity</label> <input type="number" name="updates[]" id="updates_{{ item.id }}" value="{{ item.quantity }}" min="0" data-id="{{ item.id }}"></div>
           

			

			


				  
				    {% comment %}
                To remove an item from the cart, reload the page with the following parameters.
                Added data-id for the ajax cart implementation only.
              {% endcomment %}
              <a class="remove" href="/cart/change?line={{ forloop.index }}&amp;quantity=0" data-id="{{ item.id }}">Remove</a>
			  <input type="submit" name="update" class="btn-secondary" value="Update cart">
			  	</div>

		</li>
	{% endfor %}

	
	</ul>
</div>

   <div class="cart-row">
		<label class="total-price">SubTotal</label>
		<h3 class="total-price"> <em><span id="bk-cart-subtotal-price">{{ cart.total_price | money }}</span></em></h3>
		<div class="note"><span>Excluding tax & shipping</span>
		Orders will be processed in <span id="cart-currency">{{ shop.currency }}</span> </div>


        {% comment %}
          Optional, add a textarea for special notes
            - Your theme settings can turn this on or off. Default is on.
            - Make sure you have name="note" for the message to be submitted properly
        {% endcomment %}
        {% if settings.cart_notes %}

            <label class="comment-note" for="cartSpecialInstructions"><span>Note</span>Additional comments</label>
            <textarea name="note" class="input-full" id="cartSpecialInstructions">{{ cart.note }}</textarea>

        {% endif %}

        {% comment %}
          If notes are used, adjust the column width
        {% endcomment %}

          {% comment %}
            name="checkout" is required for the update button to work
          {% endcomment %}
          <input type="submit" name="checkout" class="btn" value="Proceed to Checkout">
		   {% comment %}
            name="update" is required for the update button to work
          {% endcomment %}
         

          {% comment %}
            Paypal and Google checkout buttons
          {% endcomment %}
          {% if additional_checkout_buttons %}
            <p>{{ content_for_additional_checkout_buttons }}</p>
          {% endif %}
  
{% unless cart.item_count == 0 %}

{% include 'shipping-rates-calculator' %}

<div id="breadcrumbs" class="accent-text">
  <span><a id="continue-shopping" href="/collections/{{ continue_shopping_handle }}">&larr; Continue Shopping</a></span>
</div>

{% endunless %}


        </div>
</form>

{% else %}


  <h2>It appears that your cart is currently empty!</h2>
  <p>You can continue browsing by clicking the above images.</p>

{% endif %}


{% include 'breadcrumb' %}
<img src="https://secure.adnxs.com/px?id=626790&seg=3835076&t=2" width="1" height="1" />								
								
								
								
<!-- Begin code inserted by GrowCart -->
<script type="text/javascript">
    var growcart_shop_url = {{ shop.permanent_domain | json }}
    var growcart_product_ids = {{cart.items|map:'to_liquid'|map:'product'|map:'to_liquid'|map:'id'|join:','|json}}
</script>
<div id="growcart"></div>
<!-- End code inserted by GrowCart -->
<script type="text/javascript">
var pri =0;
try{
price=jQuery('.total-price em').text().replace(/[^0-9.]/g,'');
}catch(err){}
var productIDs = new Array();
var i;
{% for item in cart.items %}
productIDs.push('shopify_GB_{{item.product.id}}_{{item.variant.id}}');
{% endfor %}
var google_tag_params = {
ecomm_prodid: productIDs,
ecomm_pagetype: 'cart',
ecomm_totalvalue: price
};
</script>

<script language="JavaScript" type="text/javascript">

    /* ALL COMMENTS IN THIS JAVASCRIPT-TAG MAY BE REMOVED */

    /* 0 if GDPR does not apply, 1 if GDPR applies */

    var tp_rtrgt_gdpr = '0';

    /* IAB TCF 2.0 consent string */

    var tp_rtrgt_gdpr_consent = '';

    /*
     * Insert your items or products of productfeed #21191 (Dummy) in the parameter "tp_rtrgt_items".
     * This is a single-productfeed-tag, so you do not need to specify the productfeed-id individually for every item or product you pass.
     *   a) Without passing the product-quantity: ID,ID,...
     *   b) For better retargeting-results pass the product-quantity: ID|QUANTITY,ID|QUANTITY,...
     */
    var tp_rtrgt_items = '{% for line_item in cart.items %}{{ line_item.sku | slice: 0 , 8}}{% 
        if cart.items.size == forloop.index
            %}{%
        else
            %}|{%
        endif
    %}{% endfor %}';

    /*
     * Optionally you can pass your predefined retargeting-segments to do
     * both dynamic product-based and segmented retargeting.
     */

    var tp_rtrgt_segment = '';

    /* DO NOT change the javascript below */
    var tp_rtrgt_random = Math.random() * 10000000000000000;
    var tp_rtrgt_url = 'http'+(('https:'==document.location.protocol)?'s':'')+'://ad.ad-srv.net/retarget?a=56761&version=1&event=basket&cat=21191';
    tp_rtrgt_url += '&gdpr=' + tp_rtrgt_gdpr;
    tp_rtrgt_url += '&gdpr_consent=' + tp_rtrgt_gdpr_consent;
    tp_rtrgt_url += '&segment=' + tp_rtrgt_segment;
    tp_rtrgt_url += '&items=' + tp_rtrgt_items;
    document.write('<div id="tp_rtrgt_div_' + tp_rtrgt_random + '" style="position:absolute; visibility:hidden; left:0px; top:0px; width:1px; height:1px; border:0"><iframe id="tp_rtrgt_iframe_' + tp_rtrgt_random + '" name="tp_rtrgt_iframe_' + tp_rtrgt_random + '" src="' + tp_rtrgt_url + '" scrolling="no" width="1" height="1"></iframe></div>');
</script>
{% include 'cross-sell' %}